import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;


public class QuickSort {
	static FastScanner in = new FastScanner();
	static PrintWriter out = new PrintWriter(System.out);
	public static void main(String[] args) {
		int n = in.nextInt();
		int[] arr = in.readArray(n);
		QuickSort(arr);
	}


	public static int[] QuickSort(int[] arr) {
		int n = arr.length;
		int maxElement = arr[0];
		for(int x: arr) {
			maxElement = Math.max(x, maxElement);
		}
		
		int[] countArray = new int[maxElement+1];
		for(int i =0;i<n;i++) {
			countArray[arr[i]]++;
		}
		for(int x: countArray) {
			out.print(x+" ");
		}
		out.println();
	}
	
	
	static class FastScanner {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer("");
 
		String next() {
			while (!st.hasMoreTokens())
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
 
		int nextInt() {
			return Integer.parseInt(next());
		}
 
		int[] readArray(int n) {
			int[] a = new int[n];
			for (int i = 0; i < n; i++)
				a[i] = nextInt();
			return a;
		}
 
		long nextLong() {
			return Long.parseLong(next());
		}
	}
	
}
